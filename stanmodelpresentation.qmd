---
title: "Multilevel trait-microbiome mismatch model"
author: Quentin D. Read
format: 
  revealjs:
    embed-resources: true
    transition: slide
    theme: [default, qtheme.scss]
---


## The problem

- We have maternal plants from different populations
- We want to measure the association between seedling traits and seed microbiome in the offspring of these maternal plants
  + And whether this association is different by population but that's just an extra wrinkle

## The problem

- But it is not possible to observe seed microbiome and seedling traits for the same seed
- The seed can either be germinated to measure traits, or destroyed to measure microbiome, but not both

## How to resolve the problem

- We will treat the observed traits of seedlings that are offspring of the same maternal plant as realizations of an unobserved latent value: the trait value of the "average" offspring from that mother plant
- We'll do the same for the observed microbiomes of seeds from the same mother: they're realizations of the unobserved "average" seed microbiome community among offspring from that mother

## Overview of model

- So far the model I've created measures the association between microbiome and **one single trait**
- Estimate latent average seedling trait of offspring from each mother from the trait observations
- Estimate latent average seed microbiome of offspring from each mother from the microbiome observations
- Regress latent trait on latent microbiome, population of origin, and microbiome:population interaction

## The data

- $\mathbf{y}$: a vector of standardized trait values with length $N_t$ 
  + $N_t$: number of offspring for which traits were measured
- $\mathbf{X}$: a matrix of CLR-transformed seed microbiome taxon abundances with dimensions $N_m \times D$ 
  + $N_m$: number of offspring for which microbiomes were measured
  + $D$: number of taxa in the microbiome dataset
- $\mathbf{p}$: a vector of covariates at maternal plant level (here it is just population of origin) with length $M$
  + $M$: number of maternal plants
- $\mathbf{M}_{t}$: a vector of length $N_t$ assigning maternal plant to each seedling with traits 
- $\mathbf{M}_{m}$: a vector of length $N_m$ assigning maternal plant to each seed with microbiome

## The parameters

- $\mathbf{y}_M$: vector of length $M$, latent unobserved trait value of average offspring of each mother
- $\mathbf{X}_M$: matrix with dimensions $M \times D$, latent unobserved seed microbiome of average offspring of each mother
- $\sigma_{yM}$: standard deviation of traits across seedlings
- $\Sigma_{XM}$: covariance matrix of seed microbiomes
- $\beta_0$: intercept of trait regression
- $\beta_{pop}$: main effect of population on trait
- $\beta_{tax}$: vector of length $D$, main effect of each taxon on trait
- $\beta_{taxpop}$: vector of length $D$, interactive effect between each taxon and population on trait
- $\sigma$: standard deviation of traits across maternal plants

## The model

- Observed traits are realizations of unobserved latent offspring trait for each mother $\mathbf{y}_{M}$
  + $\mathbf{y}_{i} \sim \text{Normal}(\mathbf{y}_{M, M_{t}(i)}, \sigma_{yM})$
- Observed microbiomes are realizations of unobserved latent offspring microbiome for each mother $\mathbf{X}_{M}$
  + $\mathbf{X}_{i} \sim \text{MultiNormal}(\mathbf{X}_{M, M_{m}(i)}, \Sigma_{XM})$
  + (In Stan we split the covariance matrix into a correlation matrix $\Omega_{XM}$ and a vector of scaling parameters $\tau$)

## The model, continued

- Now that we have latent traits and microbiomes that match up, we can do the regression!
  + $\mathbf{y}_{Mi} \sim \text{Normal}(\beta_0 + \beta_{pop}\mathbf{p}_{i} + \beta_{tax}\mathbf{X}_{Mi} + \beta_{taxpop}\mathbf{p}_{i}\mathbf{X}_{Mi}, \sigma)$
- No interactions between taxa are currently included

## The Stan code

- Everything I explained before, plus priors on the parameters

```{stan, eval = FALSE}
// Multivariate microbiome by single trait model
// QDR 2024-05-02

data {
	int<lower=1> Nmicro;				                    // Number of offspring with microbiome data
	int<lower=1> Ntrait;				                    // Number of offspring with trait data
	int<lower=1> M;						                      // Number of maternal plants
	int<lower=1> D;						                      // Number of taxa in the microbiome data

	vector[Ntrait] y;			                          // Vector of standardized values of a trait for each offspring with trait data
	array[Nmicro] vector[D] X;                      // Array of CLR transformed abundance vectors for each offspring with microbiome data
	vector<lower=0,upper=1>[M] pop;   		          // Population of origin of the maternal plants (0=Afghanistan, 1=Turkey)

	array[Nmicro] int<lower=1,upper=M> Mmicro;		  // Mapping to maternal plants 1-M for microbiome data
	array[Ntrait] int<lower=1,upper=M> Mtrait;		  // Mapping to maternal plants 1-M for trait data
}

parameters {
  real b0;                                        // Global intercept of trait across all maternal plants
  real b_pop;                                     // Fixed effects at maternal plant level of population, taxon abundance, and their interaction
  row_vector[D] b_tax;
  row_vector[D] b_tax_pop;
	vector[M] y_M;					                        // Predicted trait value for each maternal plant
	array[M] vector[D] X_M;                         // Array of predicted abundance vectors for each maternal plant
	real<lower=0> sigma_yM;		                      // Variation (SD) among maternal plants in traits
	corr_matrix[D] Omega_xM;                        // Correlation matrix of taxon abundances
  vector<lower=0>[D] tau;                         // Parameter to scale correlation matrix to variance-covariance matrix
	real<lower=0> sigma;                            // Variation (SD) of model residuals
}

model {
  // Priors
  b0 ~ normal(0, 10);                             // Fixed effects get normal priors
  b_pop ~ normal(0, 10);                          
  b_tax ~ normal(0, 10);
  b_tax_pop ~ normal(0, 10);
  y_M ~ normal(0, 10);                            // Maternal plant level intercepts for traits and taxon abundances get normal priors
  for (i in 1:M) {
    X_M[i] ~ normal(0, 10);                       
  }
  sigma_yM ~ exponential(1);                      // SD parameters get exponential priors (must be >0)
  sigma ~ exponential(1); 
  tau ~ cauchy(0, 2.5);                           // Scaling parameters of covariance matrix get half-Cauchy priors (must be >0)                    
  Omega_xM ~ lkj_corr(2);                         // Correlation matrix gets an LKJ prior (see http://stla.github.io/stlapblog/posts/StanLKJprior.html)

  // Likelihood
  // Trait of each offspring is drawn from a normal distribution with mean being the mean trait of its mother
  for (i in 1:Ntrait) {
    y[i] ~ normal(y_M[Mtrait[i]], sigma_yM);           
  }
  // Taxon abundance of each offspring is drawn from a multivariate normal distribution with mean being the mean abundance of its mother
  for (i in 1:Nmicro) {
    X[i] ~ multi_normal(X_M[Mmicro[i]], quad_form_diag(Omega_xM, tau));    
  }
  // Trait of each maternal plant is modeled as a function of its population of origin, its microbiome, and their interactions
  for (i in 1:M) {
    y_M[i] ~ normal(b0 + b_pop * pop[i] + b_tax * X_M[i] + b_tax_pop * (pop[i] .* X_M[i]), sigma);
  }

}
```

## Fit model to Alicia's data

- For testing purposes, a subset of 100 of the >1200 taxa were selected
- Rooting depth is used as the trait
- Total 63 seed microbiomes and 50 rooting depth values, from 9 maternal plants across 2 populations

## Future directions

- The model could be extended to multivariate trait outcomes, *at least in theory*
- It could also be extended to include interactions between taxa, *at least in theory*
- A major issue is scaling up the model
  + I have only tested this on a randomly selected subset of 10 taxa from Alicia's dataset, which only has a few dozen individuals
  + It only took a few minutes to sample the model but this will increase more than linearly as community size increases
  + Full Bayesian computation on anything much bigger than that is going to be very tough
  
## Future directions, continued
  
- The most important thing to do right now is generate some fake data with known parameters and fit the model to it
- This will demonstrate that the model works
- Because Stan forces you to rigorously define your model in terms of probability distributions, this will actually be pretty easy to do!
- Stay tuned ...